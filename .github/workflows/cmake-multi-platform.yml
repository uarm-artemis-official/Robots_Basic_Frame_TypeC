name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - build_type: GTest
            os: windows-latest
            c_compiler: gcc
            cpp_compiler: g++
            toolchain_install: |
              choco install mingw -y
              echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" >> $env:GITHUB_PATH

          - build_type: Mecanum
            os: ubuntu-latest
            c_compiler: arm-none-eabi-gcc
            cpp_compiler: arm-none-eabi-g++
            toolchain_install: |
              sudo apt-get update -qq
              sudo apt-get install -y gcc-arm-none-eabi g++-arm-none-eabi
          - build_type: Omni
            os: ubuntu-latest
            c_compiler: arm-none-eabi-gcc
            cpp_compiler: arm-none-eabi-g++
            toolchain_install: |
              sudo apt-get update -qq
              sudo apt-get install -y gcc-arm-none-eabi g++-arm-none-eabi
          - build_type: Swerve
            os: ubuntu-latest
            c_compiler: arm-none-eabi-gcc
            cpp_compiler: arm-none-eabi-g++
            toolchain_install: |
              sudo apt-get update -qq
              sudo apt-get install -y gcc-arm-none-eabi g++-arm-none-eabi
          - build_type: Hero
            os: ubuntu-latest
            c_compiler: arm-none-eabi-gcc
            cpp_compiler: arm-none-eabi-g++
            toolchain_install: |
              sudo apt-get update -qq
              sudo apt-get install -y gcc-arm-none-eabi g++-arm-none-eabi

    steps:
    - uses: actions/checkout@v4

    - name: Install Toolchain
      shell: bash
      run: ${{ matrix.toolchain_install }}

    - name: Verify Compilers
      shell: bash
      run: |
        ${{ matrix.c_compiler }} --version
        ${{ matrix.cpp_compiler }} --version

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build-${{ matrix.build_type }}" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
